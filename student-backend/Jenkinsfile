pipeline {
    agent any
    stages {
        stage ('SCM backend') {
            steps {
                git 'https://github.com/rrocharoberto/devops-training.git'
            }
        }
        stage ('Build backend') {
            steps {
                script {
                    dir('student-backend/') {
                        sh 'mvn clean package -DskipTests=true' 
                    }
                }
            }
        }
        stage ('Unit test backend') {
            steps {
                script {
                    dir('student-backend/') {
                        sh 'mvn test' 
                    }
                }
            }
        }
        stage ('Sonar Analysis') {
            environment {
                scannerHome = tool 'Sonar_Scanner'
            }
            steps {
                withSonarQubeEnv('Sonar_Local') {
                    sh "${scannerHome}/bin/sonar-scanner -e  -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9000 -Dsonar.login=28b8bc4b5903cb217103e90cddef37e70685df6b -Dsonar.java.binaries=student-backend/target -Dsonar.coverage.exclusions=**/.mvn/**,**/src/test/**,**/model/**,**/Application.java"
                }
            }
        }
        stage ('Quality Gate') {
            steps {
                sleep 15
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
